apply plugin: 'com.android.library'
//apply from: '../deploy.gradle'

def isButterKnife = project.hasProperty("useButterKnife") ? project.hasProperty("useButterKnife") : false
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        // 定义是否启用ButterKnife
        buildConfigField("Boolean","isButterKnife", "${isButterKnife}")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api rootProject.ext.support['appcompat-v7']
    api rootProject.ext.dependencies['lifecycle-extensions']
    annotationProcessor rootProject.ext.dependencies['lifecycle-compiler']
    //rx管理View的生命周期
    api rootProject.ext.dependencies.rxlifecycle
    api rootProject.ext.dependencies['rxlifecycle-android']
    api rootProject.ext.dependencies['rxlifecycle-components']
    // smart-refresh-layout
    api rootProject.ext.dependencies['refresh-layout']
    api rootProject.ext.dependencies['header-classics']
    // butterknife
    compileOnly rootProject.ext.dependencies.butterknife
    // BaseRecyclerViewAdapterHelper
    api rootProject.ext.dependencies['BaseRecyclerViewAdapterHelper']
}

ext {
    artifactId = UI_ARTIFACT_ID
    versionName = UI_VERSION
}